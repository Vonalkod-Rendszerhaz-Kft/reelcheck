@using System.Globalization;
@using VRH.Log4Pro.MultiLanguageManager;
@using Vrh.Web.Membership.Areas.UserAdministration.Models;

@model DetailsViewModel

@{
    IHtmlString passwordTranslationText = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Password)));
    IHtmlString lastModifyTranslationText = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.LastModify)));
    IHtmlString newPasswordTranslationText = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.NewPassword)));
    string generateNewPasswordTranslationText = MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.GenerateNewPassword));

    IHtmlString labelLocked = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Locked)) + ": ");
    IHtmlString labelPwSecQuestion = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.PasswordSecurityQuestion)) + ":");

    IHtmlString titleUnLock = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Unlock)));
    IHtmlString titleGenerateAndSend = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.GenerateAndSendPasswordToUser)));
    IHtmlString titleChangeAndSend = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.ChangeAndSendPasswordToUser)));

    string linkDetails = MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.Common.Details));
    string linkUsersRoles = MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.ManyToMany.RoleGroups));

    ViewBag.Title = Html.Raw(String.Concat(
        MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.WUser)), ": ",
        Model.DisplayName,
        " [", MultiLanguageManager.GetTranslation(DetailsViewModel.GetStatusWordCode(Model.Status)), "]"
        ));

    string pwAction = "Password";

}

@section Styles {
    <link href="@Url.Content(Constants.AREA_CONTENTPATH + "MvcMembership.css")" rel="stylesheet" type="text/css" />
}

@if (TempData["MvcMembershipMessage"] != null)
{
    @section Scripts {
        <script type="text/javascript">
            bootbox.alert('@Html.Raw(TempData["MvcMembershipMessage"])');
        </script>
    }
}

<div class="card">
    <div class="card-header">
        <h1 class="card-title mvcMembership">@ViewBag.Title</h1>
    </div>
    <div class="card-body">

        <ul class="mvcMembership-tabs">
            <li>@Html.ActionLink(linkDetails, "Details", Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey }, null)</li>
            <li>@passwordTranslationText</li>
            @if (Model.IsRolesEnabled)
            {
                <li>@Html.ActionLink(linkUsersRoles, "UsersRoles", Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey }, null)</li>
            }
        </ul>

        <h3 class="mvcMembership">@passwordTranslationText</h3>
        <div class="mvcMembership-password">
            @if (Model.User.IsLockedOut)
            {
                <p>@(labelLocked)@Model.User.LastLockoutDate.ToString("yyyy MM dd, h:mm:ss", CultureInfo.InvariantCulture)</p>
                using (Html.BeginForm("Unlock", Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey }))
                {
                    <input type="submit" class="btn btn-success" style="max-width:40em;" value="@(titleUnLock)" />
                }
            } @*if (Model.User.IsLockedOut) END*@
            else
            {
                if (Model.User.LastPasswordChangedDate == Model.User.CreationDate)
                {
                    <dl class="mvcMembership">
                        <dt>@lastModifyTranslationText:</dt>
                        <dd><em>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Never)))</em></dd>
                    </dl>
                }
                else
                {
                    <dl class="mvcMembership">
                        <dt>@lastModifyTranslationText:</dt>
                        <dd>@Model.User.LastPasswordChangedDate.ToString("yyyy MM dd, h:mm:ss", CultureInfo.InvariantCulture)</dd>
                    </dl>
                }

                if (Model.CanResetPassword && Model.RequirePasswordQuestionAnswerToResetPassword)
                {
                    using (Html.BeginForm("ResetPasswordWithAnswer", Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey }))
                    {
                        <ul class="mvcMembership-tabs">
                            <li>@newPasswordTranslationText</li>
                            <li>@Html.ActionLink(generateNewPasswordTranslationText, pwAction, Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey, tabPage = 2 }, null)</li>
                        </ul>

                        <p>
                            <dl class="mvcMembership">
                                <dt>@(labelPwSecQuestion)</dt>
                                @if (string.IsNullOrEmpty(Model.User.PasswordQuestion) || string.IsNullOrEmpty(Model.User.PasswordQuestion.Trim()))
                                {
                                    <dd><em>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.PasswordSecurityQuestionNotDefined)))</em></dd>
                                }
                                else
                                {
                                    <dd>@Model.User.PasswordQuestion</dd>
                                }
                            </dl>
                        </p>
                        <p>
                            <label for="answer">
                                @(labelPwSecQuestion)
                                @Html.TextBox("answer")
                                <input type="submit" class="btn btn-success" style="max-width:40em;" value="@(titleGenerateAndSend)" />
                            </label>
                        </p>
                    }
                }
                else if (Model.CanResetPassword)
                {
                    <ul class="mvcMembership-tabs">
                        <li>@newPasswordTranslationText</li>
                        <li>@Html.ActionLink(generateNewPasswordTranslationText, pwAction, Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey, tabPage = 2 }, null)</li>
                    </ul>

                    using (Html.BeginForm("SetPassword", Constants.CONTROLLER_UA, new { id = Model.User.ProviderUserKey }))
                    {
                        <div>
                            <label for="password">
                                @newPasswordTranslationText:
                                @Html.TextBox("password")
                                <input type="submit" class="btn btn-success" style="max-width:40em;" value="@(titleChangeAndSend)" />
                            </label>
                        </div>
                        if (!string.IsNullOrWhiteSpace(Model.PassworErrorMessage))
                        {
                            <div>
                                <span class="field-validation-error">
                                    @Model.PassworErrorMessage
                                </span>
                            </div>
                        }
                    }
                }
            } @*else (Model.User.IsLockedOut) END*@
        </div> <!-- class="mvcMembership-password" -->
    </div> <!-- class="card-body" -->
</div> <!-- class="card card-primary" -->