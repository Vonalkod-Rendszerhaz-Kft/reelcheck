@using PagedList.Mvc;
@using VRH.Log4Pro.MultiLanguageManager;
@using Vrh.Web.Membership.Areas.UserAdministration.Models;

@model IndexViewModel

@{
    IHtmlString minuteTranslationText = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.UserLoggedInLessThanMinute)));
    IHtmlString hourTranslationText = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.UserLoggedInLessThanHour)));
    IHtmlString dayTranslationText = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.UserLoggedInLessThanDay)));

    ViewBag.Title = Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.UserManagement)));
}

@section Styles {
    <link href="@Url.Content(Constants.AREA_CONTENTPATH + "MvcMembership.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content(Constants.AREA_CONTENTPATH + "PagedList.css")" rel="stylesheet" type="text/css" />
}

@if (!Model.IsRolesEnabled)
{
    <p class="mvcMembership-warning">WARNING: Your Role Provider is currently disabled - any user may currently visit this page.<br />Change &lt;roleManager enabled="false"&gt; to &lt;roleManager enabled="true"&gt; in your web.config file.</p>
}

<div class="card">
    <div class="card-header">
        <h2 class="mvcMembership float-left">@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Users)))</h2>
                @Html.ActionLink(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.CreateNewUser)), "CreateUser", Constants.CONTROLLER_UA, new { @class = "btn btn-success float-right" })        
    </div>
    <div class="card-body mvcMembership-allUsers">
        @if (Model.Users.Count > 0)
        {
            <table class="mvcMembership mvcMembership-users">
                <thead>
                    <tr>
                        <th>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.UserName)))</th>
                        <th>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.EmailAddress)))</th>
                        <th>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.LastLogIn)))</th>
                        <th>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Description)))</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td class="mvcMembership-username">@Html.ActionLink(user.UserName, "Details", new { id = user.ProviderUserKey })</td>
                            <td class="mvcMembership-email"><a href="mailto:@user.Email">@user.Email</a></td>
                            @if (user.IsOnline)
                            {
                                <td class="mvcMembership-isOnline">@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Online)))</td>
                            }
                            else
                            {
                                <td class="mvcMembership-isOffline">
                                    @if (user.LastActivityDate.Equals(Global.NEVERONLINE))
                                    {
                                        @Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Never)))
                                    }
                                    else
                                    {
                                        @Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.Offline)))
                                        var offlineSince = (DateTime.Now - user.LastActivityDate);
                                        if (offlineSince.TotalSeconds <= 60)
                                        {
                                            <text>1 @minuteTranslationText.</text>
                                        }
                                        else if (offlineSince.TotalMinutes < 60)
                                        {
                                            <text>@Math.Floor(offlineSince.TotalMinutes) @minuteTranslationText.</text>
                                        }
                                        else if (offlineSince.TotalMinutes < 120)
                                        {
                                            <text>1 @hourTranslationText.</text>
                                        }
                                        else if (offlineSince.TotalHours < 24)
                                        {
                                            <text>@Math.Floor(offlineSince.TotalHours) @hourTranslationText.</text>
                                        }
                                        else if (offlineSince.TotalHours < 48)
                                        {
                                            <text>1 @dayTranslationText.</text>
                                        }
                                        else
                                        {
                                            <text>@Math.Floor(offlineSince.TotalDays) @dayTranslationText.</text>
                                        }
                                    }
                                </td>
                            }
                            @*@if(!string.IsNullOrEmpty(user.Comment)){*@
                            <td class="mvcMembership-comment">@user.Comment</td>
                            @*}*@
                        </tr>
                    }
                </tbody>
            </table>
            @Html.PagedListPager(Model.Users, page => Url.Action("Index", new { page, search = Model.Search }),
                                    new PagedListRenderOptions()
                                    {
                                        LinkToFirstPageFormat = "<<",
                                        LinkToPreviousPageFormat = "<",
                                        LinkToNextPageFormat = ">",
                                        LinkToLastPageFormat = ">>",
                                        MaximumPageNumbersToDisplay = 5
                                    })
        }
        else
        {
            <p>@Html.Raw(MultiLanguageManager.GetTranslation(typeof(WordCodes.MvcMembership.User.NoRegisteredUser)))</p>
        }
    </div>
</div>
@*
    <h3 class="mvcMembership">Felhasználó keresése
        @if (!string.IsNullOrWhiteSpace(Model.Search)) {
            <span>(@Html.ActionLink("Szûrés törlése", "Index"))</span>
        }
    </h3>
    <form method="get" class="mvcMembership-searchForm">
        <fieldset>
            <label>
                Felhasználónév vagy Email cím:
                <input type="text" name="search" value="@Model.Search" />
                <input type="submit" value="Keresés" />
            </label>
        </fieldset>
    </form>
*@
@*
    @if(Model.IsRolesEnabled){
        <h3 class="mvcMembership">Jogosultságok</h3>
        <div class="mvcMembership-allRoles">
        @if(Model.Roles.Count() > 0 ){
            <ul class="mvcMembership">
                @foreach(var role in Model.Roles){
                <li>
                    @Html.ActionLink(role, "Role", new{id = role})
                    @using(Html.BeginForm("DeleteRole", "UserAdministration", new{id=role})){
                    <input type="submit" value="Törlés" />
                    }
                </li>
                }
            </ul>
        }else{
            <p>Nincs jogosultsági kör létrehozva.</p>
        }

        @using(Html.BeginForm("CreateRole", "UserAdministration")){
            <fieldset>
                <label for="id">Jogosultsági kör:</label>
                @Html.TextBox("id")
                <input type="submit" value="Jogosultsági kör létrehozása" />
            </fieldset>
        }
        </div>
    }
*@